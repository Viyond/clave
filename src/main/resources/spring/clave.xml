<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName">

	<!-- properties -->
	<bean class="com.alibaba.otter.clave.utils.spring.PropertyPlaceholderConfigurer" lazy-init="false">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/><!-- 允许system覆盖 -->
		<property name="locationNames">
			<list>
				<value>classpath:clave.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="socketAddressEditor" class="com.alibaba.otter.clave.utils.spring.SocketAddressEditor" />
	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer"> 
		<property name="propertyEditorRegistrars">
			<list>
				<ref bean="socketAddressEditor" />
			</list>
		</property>
	</bean>
	
	<bean id="boss" class="com.alibaba.otter.clave.progress.ClaveBoss" >
	</bean>
	
	<bean id="progress" class="com.alibaba.otter.clave.progress.ClaveProgress" >
	</bean>
	
	<bean id="select" class="com.alibaba.otter.clave.progress.select.canal.CanalClientSelector" >
		<property name="destination" value="${clave.destination:example}" />
		<property name="zkServers" value="${clave.zkServers:127.0.0.1:2181}" />
		<property name="filter" value="${clave.filter:.*\\..*}" />
		<property name="batchSize" value="${clave.batchSize:1000}" />
		<property name="dump" value="${clave.debug:false}" />
		<property name="dumpDetail" value="${clave.debug:false}" />
		<property name="messageParser">
			<bean class="com.alibaba.otter.clave.progress.select.canal.MessageParser">
				<property name="rowMode" value="${clave.rowMode:false}" />
			</bean>
		</property>
	</bean>
	
	<bean id="load" class="com.alibaba.otter.clave.progress.load.db.DataBaseLoader" >
		<property name="action">
			<bean class="com.alibaba.otter.clave.progress.load.db.DbLoadAction">
				<property name="poolSize" value="${clave.poolSize:15}" />
				<property name="batchSize" value="50" />
				<property name="useBatch" value="true" />
				<property name="skipLoadException" value="${clave.skipLoadException:false}" />
				<property name="interceptor" ref="dbLoadInterceptor" />
			</bean>
		</property>
		<property name="dataSource">
			<bean class="com.alibaba.otter.clave.common.datasource.db.DbMediaSource">
				<property name="url" value="${clave.db.url:jdbc:mysql://127.0.0.1:3306}" />
				<property name="driver" value="${clave.db.driver:com.mysql.jdbc.Driver}" />
				<property name="username" value="${clave.db.username:root}" />
				<property name="password" value="${clave.db.password:root}" />
				<property name="type" value="${clave.db.type:MYSQL}" />
				<property name="encode" value="${clave.db.encode:UTF-8}" />
			</bean>
		</property>
	</bean>
	
	<!-- interceptor -->
	<bean id="dbLoadInterceptor" class="com.alibaba.otter.clave.progress.load.interceptor.ChainLoadInterceptor" >
		<property name="interceptors">
			<list>
				<ref bean="sqlBuilderLoadInterceptor" />
				<!-- 
				<ref bean="operationInterceptorFactory" />
				 -->
				<ref bean="dbLogLoadInterceptor" />
			</list>
		</property>
	</bean>
	
	<bean id="dbLogLoadInterceptor" class="com.alibaba.otter.clave.progress.load.db.inteceptor.LogLoadInterceptor">
		<property name="dump" value="${clave.debug:false}" />
	</bean>
	<bean id="sqlBuilderLoadInterceptor" class="com.alibaba.otter.clave.progress.load.db.inteceptor.SqlBuilderLoadInterceptor" >
		<property name="rowMode" value="${clave.rowMode:false}"></property>
	</bean>
	<!-- retl_client处理 -->
	<bean id="abstractOperationInterceptor" abstract="true">
		<property name="innerIdCount" value="300"/>
		<property name="globalIdCount" value="1000"/>
		<property name="serverId" value="${clave.serverId:-1}" />
	</bean>
	<bean id="erosaMysqlInterceptor" class="com.alibaba.otter.clave.progress.load.db.inteceptor.operation.ErosaMysqlInterceptor" parent="abstractOperationInterceptor" />
	<bean id="erosaOracleInterceptor" class="com.alibaba.otter.clave.progress.load.db.inteceptor.operation.ErosaOracleInterceptor" parent="abstractOperationInterceptor" />
	<bean id="operationInterceptorFactory" class="com.alibaba.otter.clave.progress.load.db.inteceptor.operation.OperationInterceptorFactory">
		<property name="mysqlInterceptors">
			<list>
				<ref local="erosaMysqlInterceptor"/> 
			</list>
		</property>
		<property name="oracleInterceptors">
			<list>
				<ref local="erosaOracleInterceptor"/> 
			</list>
		</property>
	</bean>  
	
	<!-- database config -->
	<bean id="dbDialectFactory" class="com.alibaba.otter.clave.common.dialect.DbDialectFactory">
		<property name="dataSourceService" ref="dataSourceService" />
		<property name="dbDialectGenerator" ref="dbDialectGenerator" />
	</bean>
	
	<bean id="dbDialectGenerator" class="com.alibaba.otter.clave.common.dialect.DbDialectGenerator">
		<property name="defaultLobHandler" ref="defaultLobHandler" />
		<property name="oracleLobHandler" ref="oracleLobHandler" />
	</bean>
	
	<!--  lob bean -->
	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler">
		<property name="streamAsLob" value="true" />
	</bean>
	<bean id="oracleLobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor" ref="automaticJdbcExtractor"/>
	</bean>
	<bean id="automaticJdbcExtractor" class="com.alibaba.otter.clave.common.dialect.lob.AutomaticJdbcExtractor">
		<property name="defaultJdbcExtractor">
			<bean class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor"/>
		</property>
		<property name="extractors">
			<map>
				<entry key="org.apache.commons.dbcp">
						<bean class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" />
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="dataSourceService" class="com.alibaba.otter.clave.common.datasource.db.DbDataSourceService">
	</bean>
</beans>